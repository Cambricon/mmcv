library "cambricon-pipe-lib@master"
env.STASH_NAME="stash_name"
env.ARTIFACTS_NAME="artifacts_name"

// MMCV_BRANCH, NODE_LABEL, BUILD_TYPE, DEST_HOST, PASSWARD, TRIGGERALL, PYTHON_VERSION, PYTORCH_VERSION
cnpipe {
  group('building') {
    stage 'building'
    task('build') {
      stage 'build'
      runOnCloud false
      node {
        label this.NODE_LABEL
      }
      script '''
        set -x
        git clone -b ${MMCV_BRANCH} http://gitlab.software.cambricon.com/neuware/oss/openmmlab/mmcv.git
        pushd ${CI_WORK_DIR}/mmcv/packaging/scripts
          # get required params
          s=$(cat ./build.property)
          VERSION=$(echo "$s" | awk -F'"version":' '{print $2}' | awk -F'"' '{print $2}')
          MMCV_VERSION=$(echo "$s" | awk -F'"official_version":' '{print $2}' | awk -F'"' '{print $2}')
          echo "=================independent_build mmcv================="
          bash independent_build.sh -m ${MMCV_BRANCH} -r ${BUILD_TYPE} -p ${PYTHON_VERSION} -v ${PYTORCH_VERSION}
          RESULT_build=$?
          if [ "${RESULT_build}" != "0" ];then
              exit ${RESULT_build}
          fi

          echo "=================upload packages================="
          bash ../ci/upload_release_packages.sh ${VERSION} ${DEST_HOST} ${PASSWARD} ${BUILD_TYPE} ${MMCV_VERSION}
          RESULT_upload=$?
          if [ "${RESULT_upload}" != "0" ];then
              exit ${RESULT_upload}
          fi
        popd
      '''
    }
  }
}

